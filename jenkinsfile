pipeline {
    agent any

    stages {

        stage('Checkout') {
            steps {
                script {
                    checkout scm
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    bat 'mvn -e clean test -Dmaven.test.failure.ignore=true'
                }
            }
        }

        stage('Report') {
            steps {
                script {
                    bat 'mvn allure:report'

                    archiveArtifacts 'target/**'

                    allure(includeProperties: false, results: [[path: 'target/allure-results']])
                }
            }
        }

        stage('Serve') {
            steps {
                script {
                    bat 'mvn allure:serve'

                    bat 'start chrome'

                    bat 'nircmd.exe savescreenshot allure-serve-screenshot.png'

                    archiveArtifacts 'allure-serve-screenshot.png'
                }
            }
        }

        stage('Send Discord Notifier') {
            steps {
                script {
                    def buildResult = currentBuild.currentResult
                    def branchName = env.BRANCH_NAME
                    def buildNumber = env.BUILD_NUMBER

                    def message = "# Relatorio de Testes/API Chronos\n"
                    message += "**Branch:** RELEASE\n"
                    message += "**Build:** ${buildNumber}\n"
                    message += "**Status:** ${buildResult}\n"

                    discordSend description: message, webhookURL: "https://discord.com/api/webhooks/1212851937758937209/o5j4_OPhUd-OVY4tJqCteJTbPFQrTHMaE967Ezmi1xzbsFbJdMh3H1IuNkCcpE3wLgBs"
                }
            }
        }
    }
}
